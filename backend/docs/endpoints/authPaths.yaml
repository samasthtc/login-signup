/auth/login:
  post:
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              email: john.doe@example.com
              password: securepassword
            title: ""
            required:
              - email
              - password
            properties:
              email:
                type: string
                description: User's email address
              password:
                type: string
                description: User's password
        application/x-www-form-urlencoded:
          schema:
            type: object
            example:
              email: john.doe@example.com
              password: securepassword
            title: ""
            required:
              - email
              - password
            properties:
              email:
                type: string
                description: User's email address
              password:
                type: string
                description: User's password
    responses:
      "200":
        description: Login Successful
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  $ref: "#/components/schemas/UserNoPassword"
                message:
                  type: string
                  example: Login Successful
                token:
                  type: string
      "400":
        description: Missing email or password.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: Email or password is missing!
      "401":
        description: Invalid Credentials
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: Invalid Credentials!
    tags:
      - Authentication
    description: 
    operationId: login
    summary: User Login
    parameters: []
    security: []
/auth/register:
  post:
    requestBody:
      content:
        application/json:
          schema:
            type: object
            example:
              name: John Doe
              email: john.doe@example.com
              password: securepassword
              role: user
            required:
              - name
              - email
              - password
            properties:
              name:
                type: string
                description: User's name
              email:
                type: string
                description: User's email address
              password:
                type: string
                description: User's password
              role:
                enum:
                  - user
                  - admin
                default: user
                description: User's role (user or admin). Default is user
        application/x-www-form-urlencoded:
          schema:
            type: object
            example:
              name: John Doe
              email: john.doe@example.com
              password: securepassword
              role: user
            required:
              - name
              - email
              - password
            properties:
              name:
                type: string
                description: User's name
              email:
                type: string
                description: User's email address
              password:
                type: string
                description: User's password
              role:
                enum:
                  - user
                  - admin
                default: user
                description: User's role (user or admin). Default is user
    responses:
      "201":
        description: User registered successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                data:
                  $ref: "#/components/schemas/UserNoPassword"
                message:
                  type: string
                  example: User registered successfully!
      "400":
        description: Invalid data.
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Name must have more than 2 characters.
                    email:
                      type: string
                      example: Invalid email.
                    password:
                      type: string
                      example: Password must contain at least one number.
      "409":
        description: User already exists
        content:
          application/json:
            schema:
              type: object
              properties:
                success:
                  type: boolean
                  example: false
                message:
                  type: string
                  example: User already exists!
    tags:
      - Authentication
    description: 
    operationId: register
    summary: User Register
    security: []
